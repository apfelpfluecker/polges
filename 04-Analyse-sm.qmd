---
execute: 
  echo: false
  warning: false
  message: false
---

# Analyseebene 3: Facebook-Posts

```{r}
#| label: setup
#| include: false
#| echo: false
#| waring: false
#| error: false

source("_common.R")
library(dplyr)
library(knitr)

```

In der letzten Analyseebene werden nun Facebook-Posts der Bundestagsparteien analysiert.

## Methodik

Die Erhebung der zugrunde liegenden Daten erfolgte mithilfe der Software Facepager [@jünger2020]. Diese sammelt die Daten über die Graph API von Facebook (v14.0), wofür das Preset "Get Posts" (v14.0) genutzt wurde.

Der Untersuchungszeitraum war parallel zur Erhebung der Bundestagsanträge der 24.10.2017 bis zum 19.06.2024. Genau wie bei den Bundestagsanträgen [vgl. @ismayr2012: 403] ist in Betracht zu ziehen, dass sich das Postverhalten mit einer Regierungsbeteiligung verändern könnte [vgl. @engesser2017: 1358-1359]. Um zusätzlich einen zeitlichen Überblick über das Antragsverhalten zu ermöglichen, ist es sinnvoll, dass sich Oppositions- und Regierungszeit innerhalb eines Zeitraums nicht überlappen, um gegebenenfalls Antragsverhalten auf das Oppositionsdasein rückführen zu können.[^04-analyse-sm-1] Deswegen wurden sowohl die Wahlperiode als auch die schon in @sec-methodik-bta benannten Zeiträume erhoben. Wie auch bei den Bundestagsanträgen wird davon ausgegangen, dass vor 2017 weitaus weniger Analyseeinheiten zu verzeichnen gewesen wären und dadurch der Aufwand den wissenschaftlichen Nutzen deutlich überwogen hätte.

[^04-analyse-sm-1]: Dass dies nicht statistisch zwingend belegt werden kann, ist dem Autor durchaus bewusst. Allerdings soll das Vorgehen ermöglichen, Vermutungen in diese Richtung anzustellen, um möglichen Nachfolgeuntersuchungen erste Hinweise für eine empirisch und statistisch saubere Untersuchung zu liefern.

Der Untersuchungsbereich bezieht sich ausschließlich auf deutsche Parteien. Innerhalb dieses Pools wurden anhand einer Auswahl typischer Fälle lediglich die Parteien betrachtet, die während des Untersuchungszeitraums eine Gruppe oder eine Fraktion im Bundestag stellten oder Teil davon waren.[^04-analyse-sm-2] Übrig bleiben nach dieser Auswahl die Sozialdemokratische Partei Deutschlands (SPD), die Christlich Demokratische Union Deutschlands (CDU) und ihre Schwesterpartei, die Christlich-Soziale Union in Bayern (CSU), Bündnis 90/Die Grünen (Grüne), die Freie Demokratische Partei (FDP), die Alternative für Deutschland (AfD), Die Linke (Linke), sowie das Bündnis Sahra Wagenknecht – Vernunft und Gerechtigkeit (BSW), die im Folgenden der Übersicht halber auch als "Bundestagsparteien" bezeichnet werden.

[^04-analyse-sm-2]: Damit ist der Südschleswigsche Wählerverband (SSW) beispielsweise nicht Teil der Analyse, obwohl die Partei als Partei nationaler Minderheiten 2021 in den Bundestag gewählt wurde. Ihr Abgeordneter Stefan Seidler ist fraktionslos. Gleiches gilt für die Partei für Arbeit, Rechtsstaat, Tierschutz, Elitenförderung und basisdemokratische Initiative (Die PARTEI) und Marco Bülow, der 2018 als Mitglied des Bundestages (MdB) aus der SPD und der SPD-Fraktion austrat, um 2020 in die Partei Die PARTEI einzutreten.

Die Social-Media-Kommunikation der Bundestagsparteien wurde operationalisiert durch Facebook-Posts. Soziale Medien stehen deswegen im Fokus dieser Analyse, da sie Populismus unter anderem aufgrund der direkteren Verbindung zur Zielgruppe im Gegensatz zu anderen Medien [vgl. @engesser2017: 1113] einen besonders guten Nährboden bieten [vgl. @müller2016: 194; vgl. @engesser2017: 1350]. Außerdem gehören sie zum festen Kommunikationsrepertoire der Parteien [vgl. @spieß2020: 221], sodass davon ausgegangen werden kann, dass die transportierten Inhalte Ausdruck der Parteimeinung sind. Facebook wurde als Plattform aus drei Gründen ausgewählt: Erstens zeigten bereits @spieß2020 \[: 222\], "dass populistische Kommunikation insbesondere auf Facebook reüssiert". @ernst2017 [: 1357] kamen darüber hinaus zu dem Schluss, dass populistische Kommunikation auf Facebook mehr vertreten ist als bei X (damals Twitter). Zweitens ist Facebook die größte Social-Media-Plattform in Deutschland (vgl. @fig-sm-marktanteil),[^04-analyse-sm-3] die darüber hinaus auch populärer und sozial gemischter ist als andere (Text-)Plattformen [vgl. @ernst2017: 1352]. Und drittens konnten aus forschungsökonomischen Gründen keine weiteren Plattformen untersucht werden.[^04-analyse-sm-4] Ein weiterer Vorteil gegenüber X (ehemals Twitter) ist die nicht vorhandene Zeichenlimitationen, wodurch populistische Konstrukte viel umfangreicher formuliert werden können.

[^04-analyse-sm-3]: Kritisch angemerkt werden muss, dass die Daten von Statcounter GlobalStats [-@statcounter2024] wichtige Plattformen wie TikTok, Snapchat oder Twitch nicht berücksichtigen. Das ist durchaus problematisch und verzerrt die Daten vermutlich deutlich, wie ein Blick auf die ARD/ZDF-Onlinestudie zeigt, bei der die Ergebnisse erheblich anders aussehen [vgl. @koch2023]. Der Grund könnte darin liegen, dass die Messung bei GlobalStats über Website-Klicks erfolgt, während Instagram, TikTok und Co. klassische App-Plattformen sind, die wenig bis kaum im Internet genutzt werden. Hinzu kommt, dass das Nutzungsverhalten sich auch nach Altersgruppen unterscheiden dürfte: Zu vermuten wäre beispielsweise, dass junge Menschen eher die App-Anwendung nutzen als ältere. Weil junge Menschen vermutlich mehr auf Social Media unterwegs sind, ist der Bias dementsprechend sehr hoch. Zugute halten muss man den Daten allerdings, dass abseits dessen die Datenvalidität aufgrund ihrer automatisierten Erfassung über die Websiteklicks besser sein dürfte als bei Befragungsergebnissen wie der ARD/ZDF-Onlinestudie, die ein korrektes Einschätzungsvermögen der Befragten voraussetzt. Auch wenn die exakten Nutzungszahlen immer nur eine Annäherung sein können und einige wichtige Plattformen nicht oder zu wenig berücksichtigt wurden, ist eine Tendenz aus den Daten in jedem Falle ablesbar.

[^04-analyse-sm-4]: Interessant wäre sicherlich die Untersuchung von X (ehemals Twitter) als eine sehr diskussionsfreudige Plattform gerade hinsichtlich politisch-gesellschaftlicher Themen gewesen. Auch bezüglich der Unterschiede in der Kommunikation auf beiden Plattformen bieten sich aufgrund des professionellen wie auch elitären Charakters von X interessante Forschungsfelder [vgl. @degen2023: 45]. Allerdings gewährt X seit dem 09.02.2024 keinen kostenfreien API-Zugang mehr [vgl. @weiß2023: o. S.].

```{r sm-marktanteil}
#| label: fig-sm-marktanteil
#| fig-cap: "Marktanteile verschiedener Social-Media-Plattformen im Zeitverlauf (10/2017–06/2024). Datengrundlage: Statcounter GlobalStats. Eigene Abbildung."
#| out-width: 50%
#| echo: false
#| warning: false
#| message: false

library(lubridate)
# Marktanteile-Datensatz einlesen
sm_marktanteile <- readRDS("data/sm_marktanteile.Rds")
# in Long-Format umwandeln
sm_marktanteile_long <- sm_marktanteile %>% 
  pivot_longer(cols = -Date, names_to = "Plattform", values_to = "MarketShare")
# Date in Datumsformat umwandeln
sm_marktanteile_long$Date <- ymd(paste0(sm_marktanteile_long$Date, "-01"))
# Plot
ggplot(data = sm_marktanteile_long, aes(x = Date, y = MarketShare, color = Plattform)) +
  geom_line(linewidth = 0.4) +
  geom_point(size = 0.3) +
  labs(x = "Zeit (in Monaten)", y = "Marktanteil (%)") +
  theme_minimal()

```

Die Analyse bezieht sich inhaltlich auf die Social-Media-Kommunikation der Bundestagsparteien. Diese wird operationalisiert durch die Posts der Bundesparteien, beschränkt auf das Medium Facebook.[^04-analyse-sm-5] Eine Ausnahme stellt die CSU dar, die keine Bundespartei hat, da sie ausschließlich in Bayern aktiv ist. Aufgrund des Gewichts der Partei wurde sich dennoch für eine Miteinbeziehung der CSU entschieden, obgleich dies einige Probleme mit sich bringt. Da der Facebook-Account der CSU vornehmlich nicht nur für Bundespolitik zuständig ist, sondern auch für Landespolitik – anders als die Bundesaccounts der anderen Bundestagsparteien –, beeinflussen auch landespolitische Themen die Postinhalte. Das kann sich beispielsweise an der Thematisierung von Verboten der Geschlechterumschreibung durch Sonderzeichen in Bayern ausdrücken. In anderen Bundestagsparteien ist dies eine Angelegenheit des jeweiligen Landesverbands, weswegen sie erst einmal gar nicht zuständig sind und landespolitische Sachverhalte abgesehen von Wahlwerbung zu Landtagswahlen eher nicht kommentieren. Apropos Landtagswahlen: Auch das ist ein problematischer Bias, denn im Wahlkampf fahren Parteien Kampagnen, die sich natürlich auch auf die Social-Media-Kommunikation auswirken. Grundsätzlich betreffen Landtagswahlen alle Parteien gleich, dies gilt jedoch nicht für die CSU, die lediglich der Bundestagswahlkampf sowie der Bayernwahlkampf betrifft.[^04-analyse-sm-6] Zusätzlich hat der Bayernwahlkampf für die CSU eine ähnlich große Dimension wie der Bundestagswahlkampf, während die 16 (beziehungsweise für die CDU 15) Landtagswahlkämpfe für die Bundespartei-Accounts auf Facebook wesentlich weniger Relevanz haben als der Bundestagswahlkampf.[^04-analyse-sm-7] Die Bewertung der Ergebnisse muss vor diesen Hintergründen vorgenommen werden.

[^04-analyse-sm-5]: Folgende Accounts waren damit Teil der Analyse: [SPD](https://www.facebook.com/SPD), [CDU](https://www.facebook.com/CDU), [CSU](https://www.facebook.com/CSU), [B90DieGruenen](https://www.facebook.com/B90DieGruenen), [FDP](https://www.facebook.com/FDP), [alternativefuerde](https://www.facebook.com/alternativefuerde), [linkspartei](https://www.facebook.com/linkspartei) sowie [BSW.Bund](https://www.facebook.com/BSW.Bund).

[^04-analyse-sm-6]: Im Untersuchungszeitraum fanden zwei Bayernwahlen statt (2018 und 2023).

[^04-analyse-sm-7]: Zumal auch einbezogen werden müsste, dass auch die verschiedenen Landtagswahlen eine unterschiedlich große Relevanz für die Parteien haben – ob aus Prestigegründen oder aktuellen politischen Trends. Es sei einmal mehr darauf verwiesen, dass Theorien komplexitätsreduzierend wirken.

Berücksichtigt wurden all jene Facebook-Posts, die über Textinhalte in der Variable message verfügen. Das bedeutet, dass Posts mit Bild- oder Videoanhängen grundsätzlich einbezogen wurden, insofern sie auch über einen Text verfügten, wobei Bild- und Videoanhänge allerdings nicht codiert wurden.

Zuletzt werden ausschließlich die Posts der Inhaltsanalyse unterzogen, die das Thema geschlechtergerechte Sprache mindestens anschneiden. Dabei ist wichtig zu erwähnen, dass die Nutzung geschlechtergerechter Sprache an sich keine Thematisierung im Sinne des Forschungsinteresses darstellt, da eine theoretische Differenzierung bezüglich der Verwendung geschlechtergerechter Sprache kaum möglich ist. Korrekterweise ist schon das generische Maskulinum eine Form geschlechtergerechter Sprache [vgl. @wizorek2022: 4; vgl. @eisenberg2022: 35] genauso wie die weit verbreitete Beidnennung (beispielsweise in "Studentinnen und Studenten", siehe auch @sec-ges-theorie). Als Thematisierung gelten alle Verwendungen der Wortbestandteile `gender+`, `geschlecht(.*)gerecht+` sowie `generisch+`,[^04-analyse-sm-8] die semantisch mit geschlechtergerechter Sprache zu tun haben.[^04-analyse-sm-9]

[^04-analyse-sm-8]: Das Zeichen `+` steht für einen beliebig langen Platzhalter, der null oder mehr Zeichen umfasst. Das Zeichen `(.*)` bewirkt einen beliebig langen Platzhalter zwischen den beiden Wörtern "geschlecht" und "gerecht+", das bedeutet, es können auch ganze Wörter zwischen diesen beiden stehen. Groß- und Kleinschreibung spielen keine Rolle.

[^04-analyse-sm-9]: Die Auswahl erfolgte automatisiert über das R-Paket *stringr* [@wickham2023]. Anschließend wurden die Posts manuell auf ihre korrekte Zuordnung überprüft. Da "gender" auch in Wörtern wie "aufregender", "steigender", "hervorragender" vorkommt, gab es relativ viele falsche Zuordnungen. Trotzdem wurde auf ein zweites Auswahlkriterium verzichtet, da die Gefahr der fälschlichen Ausschließung bei Facebook-Posts wesentlich höher eingeschätzt wird.

Kritisch zu betrachten ist, dass die Inhaltsanalyse lediglich von einem einzelnen Codierer vorgenommen wurde. Zwar ist die Auswahleinheit nicht besonders groß [vgl. @rössler2017: 174], allerdings stellte sich heraus, dass die Reliabilität im Codierprozess nur schwer von einem einzelnen Codierer sicherzustellen ist [vgl. dazu @rössler2017: 175]. Zwar erfolgte eine Art Pretestphase, die jedoch ebenso an den forschungsökonomischen Gegebenheiten dieser Arbeit krankt [vgl. @brosius2022: 176].

Die Daten werden mithilfe einer manuellen standardisierten Inhaltsanalyse [vgl. @rössler2017; @brosius2022] analysiert. Die ausführliche Dokumentation dazu befindet sich im dieser Arbeit beiliegenden Codebuch (@sec-codebuch).

Um die Hypothesen zu überprüfen wird vornehmlich auf deskriptive Statistiken zurückgegriffen, die aus den Daten hervorgehen.

Der Populismusgrad wird dabei über eine neundimensionale, angepasste Skala nach @spieß2020 und @ernst2017 ermittelt, die auf der schon thematisierten Definition von @mudde2004 beruht.[^04-analyse-sm-10] Jede der drei Populismusdimensionen wird durch verschiedene Variablen ausgedrückt. Eine ausführliche Beschreibung aller Dimensionen und Variablen findet sich im Codebuch (@sec-codebuch). Kritisch anzumerken ist an dieser Stelle, dass das Vorgehen der Multidimensionalität von Populismus in dem Sinne nicht vollständig gerecht wird, als dass Posts mit hohen Elitenkritik-Werten denselben Score erhalten können wie Posts mit mittleren Volksnähe-, Elitenkritik- und Wiederherstellung-von-Volkssouveränitäts-Werten [vgl. @lewandowsky2022: 36].

[^04-analyse-sm-10]: Der Skalenwert 0 bedeutet, die Aussagen zu geschlechtergerechter Sprache enthalten keinen Populismus, die Skalenwerte 1 und 2 bedeuten geringen Populismus, 3 und 4 moderaten Populismus sowie 5 und höher hohen Populismus [vgl. @spieß2020: 228].

## Datenanalyse und Ergebnisse

Einen Überblick über die Ergebnisse der Inhaltsanalyse liefert @fig-smplots. In @fig-smplots-1 ist zu sehen, dass die Anzahl der geposteten Beiträge zwischen den Parteien stark und signifikant variiert (`Chi² (7) = 6456.5, p < 0.01`). Mit Abstand posten CSU und AfD die meisten Textnachrichten. Auffällig ist, dass die Grünen sehr abgeschlagen sind und auch die Linken weitaus weniger aktiv sind als erwartet. Die hohen Werte der CSU lassen sich durch die beiden Bayernwahlkämpfe erklären, die die anderen Bundesparteien nicht in dem Maße betrafen. Die niedrigen Werte des BSW sind im jungen Alter der Partei begründet. H3.1 kann also als widerlegt gelten, auch wenn die AfD ohne Frage deutlich mehr aktiv ist als die anderen Parteien.

Schaut man auf die Thematisierung geschlechtergerechter Sprache in den untersuchten Facebook-Posts (@fig-smplots-4), kann deutlich festgestellt werden, dass die AfD das Feld signifikant dominiert (`Chi² (3) = 118.54, p < 0.01`). Einzig die CSU thematisiert geschlechtergerechte Sprache ebenfalls oft, was unter anderem auf den Bayernwahlkampf 2023 zurückgeführt werden könnte, in dessen Zeitfenster besonders viele Posts pro Tag abgesetzt wurden (@fig-smplots-6) – was mit Blick auf H3.4 plausibel erscheint. Dasselbe, wenn auch gestauchtere, Bild zeigt sich auch in der Betrachtung der Posts, die sich hauptsächlich mit geschlechtergerechter Sprache befassen (@fig-smplots-7, `Chi² (2) = 22.17, p < 0.01`; @fig-smplots-9, `Chi² (12, 36) = 21.8, p < 0.01`[^04-analyse-sm-11]). Hypothese 3.3 gilt damit als nicht falsifiziert.

[^04-analyse-sm-11]: Fisher-Test zur Ermittlung der exakten Signifikanz.

Dahingegen kann Hypothese 3.4 weder bekräftigt noch verworfen werden. Zwar wurden die meisten Posts zu geschlechtergerechter Sprache im Vorfeld des Bundestagswahlkampfes 2021 veröffentlicht (35 %), jedoch sind die Zahlen für das folgende Jahr ebenfalls sehr hoch (@fig-smplots-6, `Chi² (18, 74) = 35.23, p < 0.05`[^04-analyse-sm-12]) – auch wenn sich für Posts mit dem Hauptthema geschlechtergerechte Sprache ein anderes Bild zeigt (@fig-smplots-9; Anteil 44 %).

[^04-analyse-sm-12]: Fisher-Test zur Ermittlung der exakten Signifikanz.

Interessant ist, dass die Daten nahelegen, dass geschlechtergerechte Sprache einerseits rein zahlenmäßig gar kein so großes Thema war (auch wenn Vergleiche zu anderen Themenbereichen notwendig wären, um dies zwingend festzustellen) und andererseits der Peak des Themas längst überschritten ist – zumindest für Posts der Bundestagsparteien. Zudem legt die sinkende Zahl der durchschnittlichen Posts pro Tag den Schluss nahe, dass auch das Medium Facebook seinen Peak bereits hinter sich hat (@fig-smplots-2, `Chi² (7) = 560.03, p < 0.01`). Dies könnte durch zeitlich umfangreichere Untersuchungen und im Vergleich zu anderen Social Media noch exakter untersucht werden. Ein eventueller Zusammenhang zwischen einer Regierungsbeteiligung und dem Postverhalten kann aus den Daten nicht abgeleitet werden (@fig-smplots-2).

```{r plots-erstellen}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(patchwork)
library(tidyr)
library(viridisLite)
library(viridis)

fb_posts <- readRDS("data/fb_posts.Rds")
desired_order <- c("SPD", "CDU", "CSU", "Grüne", "FDP", "AfD", "Linke", "BSW")


# Posts Gesamt
post_counts <- as.data.frame(table(fb_posts$party))
colnames(post_counts) <- c("party", "count")
post_counts$party <- factor(post_counts$party, levels = desired_order)
p1 <- ggplot(post_counts, aes(x = party, y = count, fill = party)) +
  geom_bar(stat = "identity", show.legend = FALSE) + # Legende unterdrücken
  scale_fill_manual(values = parteifarben) + # Farbe einstellen
  labs(#title= "Gesamtzahl der Posts",
       x = "Partei",
       y = "Anzahl",
       fill = "Partei") +
  theme_minimal() +
  #scale_x_discrete(labels = function(x) str_wrap(x, width = 13)) # Umbruch der Beschriftung
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


# Posts Gesamt nach Wahlperiode
days19 <- days_in_period("2017-10-24", "2021-10-25") # 19
days20 <- days_in_period("2021-10-26", "2024-06-19") # 20
post_counts <- as.data.frame(table(fb_posts$party, fb_posts$Wahlerperiode))
days_in_time <- data.frame(election_period = c("19", "20"), days = c(days19, days20)) 
colnames(post_counts) <- c("party", "election_period", "count")
post_counts <- post_counts %>%
  left_join(days_in_time, by = "election_period") %>% # anheften an Ds
  mutate(relative_count = count / days) # relativen Wert berechnen
post_counts$party <- factor(post_counts$party, levels = desired_order)
p2 <- ggplot(post_counts, aes(x = party, y = relative_count, fill = election_period)) +
  geom_bar(stat = "identity", position = "dodge") + 
  #scale_fill_viridis(discrete = TRUE) + # Viridis-Farbschema verwenden
  scale_fill_manual(values = duofarben,
                    labels = c("19" = "19.", "20" = "20.")) + # Farbe einstellen
  labs(#title = "Relative Anzahl der Posts nach Partei und Wahlperiode pro Tag",
       x = "Partei",
       y = "Posts/Tag (Durchschnitt)",
       fill = "Wahlperiode") +
  theme_minimal() +
  #scale_x_discrete(labels = function(x) str_wrap(x, width = 13))
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


# Posts Gesamt nach Zeit
days1 <- days_in_period("2017-10-24", "2018-10-25")
days2 <- days_in_period("2018-10-26", "2019-10-25")
days3 <- days_in_period("2019-10-26", "2020-10-25")
days4 <- days_in_period("2020-10-26", "2021-10-25")
days5 <- days_in_period("2021-10-26", "2022-10-25")
days6 <- days_in_period("2022-10-26", "2023-10-25")
days7 <- days_in_period("2023-10-26", "2024-06-19")
post_counts <- as.data.frame(table(fb_posts$party, fb_posts$Zeitraum))
days_in_time<- data.frame(time = c("1", "2", "3", "4", "5", "6", "7"), days = c(days1, days2, days3, days4, days5, days6, days7)) 
colnames(post_counts) <- c("party", "time", "count")
post_counts <- post_counts %>%
  left_join(days_in_time, by = "time") %>% # anheften an Ds
  mutate(relative_count = count / days) # relativen Wert berechnen
post_counts$party <- factor(post_counts$party, levels = desired_order)
p3 <- ggplot(post_counts, aes(x = party, y = relative_count, fill = time)) +
  geom_bar(stat = "identity", position = "dodge") + 
  #scale_fill_viridis(discrete = TRUE) + # Viridis-Farbschema verwenden
  scale_fill_manual(values = farben,
                    labels = c("1" = "2017/18", "2" = "2018/19", "3" = "2019/20", "4" = "2020/21", "5" = "2021/22", "6" = "2022/23", "7" = "2023/24")) + # Farbe einstellen; Labels für die Kategorien
  labs(#title = "Relative Anzahl der Posts nach Partei und Zeit pro Tag",
       x = "Partei",
       y = "Posts/Tag (Durchschnitt)",
       fill = "Zeitraum") +
  theme_minimal() +
  #scale_x_discrete(labels = function(x) str_wrap(x, width = 13))
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#################################################################

gender_posts <- fb_posts %>% 
  filter(filter == TRUE)
all_parties <- data.frame(party = unique(fb_posts$party))
# Gender-Posts Gesamt
post_counts <- as.data.frame(table(gender_posts$party))
colnames(post_counts) <- c("party", "count")
# alle Parteien berücksichtigen
post_counts <- all_parties %>%
  left_join(post_counts, by = "party") %>%
  tidyr::replace_na(list(count = 0))  # Setze fehlende Werte auf 0
post_counts$party <- factor(post_counts$party, levels = desired_order)
p4 <- ggplot(post_counts, aes(x = party, y = count, fill = party)) +
  geom_bar(stat = "identity", show.legend = FALSE) + # Legende unterdrücken
  labs(#title= "Posts, die geschlechtergerechte Sprache thematisieren",
       x = "Partei",
       y = "Anzahl",
       fill = "Partei") +
  theme_minimal() +
  scale_fill_manual(values = parteifarben) + # Farbe einstellen
  #scale_x_discrete(labels = function(x) str_wrap(x, width = 13)) # Umbruch der Beschriftung
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


# Gender-Posts Gesamt nach Wahlperiode
post_counts <- as.data.frame(table(gender_posts$party, gender_posts$Wahlerperiode))
days_in_time <- data.frame(election_period = c("19", "20"), days = c(days19, days20)) 
colnames(post_counts) <- c("party", "election_period", "count")
post_counts <- all_parties %>%
  left_join(post_counts, by = "party") %>%
  tidyr::replace_na(list(count = 0))  # Setze fehlende Werte auf 0
post_counts <- post_counts %>%
  left_join(days_in_time, by = "election_period") %>% # anheften an Ds
  mutate(relative_count = count / days)  # relativen Wert berechnen
post_counts$party <- factor(post_counts$party, levels = desired_order)
p5 <- ggplot(post_counts, aes(x = party, y = relative_count, fill = election_period)) +
  geom_bar(stat = "identity", position = "dodge") + 
  scale_fill_manual(values = duofarben,
                    labels = c("19" = "19.", "20" = "20.")) + # Farbe einstellen
  labs(#title = "Relative Anzahl der Posts nach Partei und Wahlperiode pro Tag",
       x = "Partei",
       y = "Posts/Tag (Durchschnitt)",
       fill = "Wahlperiode") +
  theme_minimal() +
  #scale_x_discrete(labels = function(x) str_wrap(x, width = 13))
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


# Gender-Posts Gesamt nach Zeit
post_counts <- as.data.frame(table(gender_posts$party, gender_posts$Zeitraum))
days_in_time <- data.frame(time = c("2017/18", "2", "3", "4", "5", "6", "7"), days = c(days1, days2, days3, days4, days5, days6, days7)) 
colnames(post_counts) <- c("party", "time", "count")
post_counts <- all_parties %>%
  left_join(post_counts, by = "party") %>%
  tidyr::replace_na(list(count = 0))  # Setze fehlende Werte auf 0
post_counts <- post_counts %>%
  left_join(days_in_time, by = "time") %>% # anheften an Ds
  mutate(relative_count = count / days) # relativen Wert berechnen
post_counts$party <- factor(post_counts$party, levels = desired_order)
p6 <- ggplot(post_counts, aes(x = party, y = relative_count, fill = time)) +
  geom_bar(stat = "identity", position = "dodge") + 
  scale_fill_manual(values = farben,
                    labels = c("1" = "2017/18", "2" = "2018/19", "3" = "2019/20", "4" = "2020/21", "5" = "2021/22", "6" = "2022/23", "7" = "2023/24")) + # Farbe einstellen; Labels für die Kategorien
  theme_minimal() +
  labs(#title = "Relative Anzahl der Gender-Posts nach Partei und Zeit pro Tag",
       x = "Partei",
       y = "Posts/Tag (Durchschnitt)",
       fill = "Zeitraum") +
  #scale_x_discrete(labels = function(x) str_wrap(x, width = 13))
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#################################################################

gender_main_posts <- fb_posts %>% 
  filter(Hauptthema == 1)
all_parties <- data.frame(party = unique(fb_posts$party))

# Gender-Posts Hauptthema Gesamt
post_counts <- as.data.frame(table(gender_main_posts$party))
colnames(post_counts) <- c("party", "count")
post_counts <- all_parties %>%
  left_join(post_counts, by = "party") %>%
  tidyr::replace_na(list(count = 0))  # Setze fehlende Werte auf 0
post_counts$party <- factor(post_counts$party, levels = desired_order)
p7 <- ggplot(post_counts, aes(x = party, y = count, fill = party)) +
  geom_bar(stat = "identity", show.legend = FALSE) + # Legende unterdrücken
  labs(#title= "Posts mit Hauptthema geschlechtergerechte Sprache",
       x = "Partei",
       y = "Anzahl",
       fill = "Partei") +
  theme_minimal() +
  scale_fill_manual(values = parteifarben) + # Farbe einstellen
  #scale_x_discrete(labels = function(x) str_wrap(x, width = 13)) # Umbruch der Beschriftung
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


# Gender-Posts Hauptthema Gesamt nach Wahlperiode
post_counts <- as.data.frame(table(gender_main_posts$party, gender_main_posts$Wahlerperiode))
days_in_time <- data.frame(election_period = c("19", "20"), days = c(days19, days20)) 
colnames(post_counts) <- c("party", "election_period", "count")
post_counts <- all_parties %>%
  left_join(post_counts, by = "party") %>%
  tidyr::replace_na(list(count = 0))  # Setze fehlende Werte auf 0
post_counts <- post_counts %>%
  left_join(days_in_time, by = "election_period") %>% # anheften an Ds
  mutate(relative_count = count / days) # relativen Wert berechnen
post_counts$party <- factor(post_counts$party, levels = desired_order)
p8 <- ggplot(post_counts, aes(x = party, y = relative_count, fill = election_period)) +
  geom_bar(stat = "identity", position = "dodge") + 
  scale_fill_manual(values = duofarben,
                    labels = c("19" = "19.", "20" = "20.")) + # Farbe einstellen
  labs(#title = "Relative Anzahl der Posts nach Partei und Wahlperiode pro Tag",
       x = "Partei",
       y = "Posts/Tag (Durchschnitt)",
       fill = "Wahlperiode") +
  theme_minimal() +
  #scale_x_discrete(labels = function(x) str_wrap(x, width = 13))
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


# Gender-Posts Hauptthema Gesamt nach Zeit
post_counts <- as.data.frame(table(gender_main_posts$party, gender_main_posts$Zeitraum))
days_in_time <- data.frame(time = c("2017/18", "2", "3", "4", "5", "6", "7"), days = c(days1, days2, days3, days4, days5, days6, days7)) 
colnames(post_counts) <- c("party", "time", "count")
post_counts <- all_parties %>%
  left_join(post_counts, by = "party") %>%
  tidyr::replace_na(list(count = 0))  # Setze fehlende Werte auf 0
post_counts <- post_counts %>%
  left_join(days_in_time, by = "time") %>% # anheften an Ds
  mutate(relative_count = count / days) # relativen Wert berechnen
post_counts$party <- factor(post_counts$party, levels = desired_order)
p9 <- ggplot(post_counts, aes(x = party, y = relative_count, fill = time)) +
  geom_bar(stat = "identity", position = "dodge") + 
  scale_fill_manual(values = farben,
                    labels = c("1" = "2017/18", "2" = "2018/19", "3" = "2019/20", "4" = "2020/21", "5" = "2021/22", "6" = "2022/23", "7" = "2023/24")) + # Farbe einstellen; Labels für die Kategorien
  labs(#title = "Relative Anzahl der Posts nach Partei und Zeit pro Tag",
       x = "Partei",
       y = "Posts/Tag (Durchschnitt)",
       fill = "Zeitraum") +
  theme_minimal() +
  #scale_x_discrete(labels = function(x) str_wrap(x, width = 13))
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill = "none", colour = "none") # Legende ausblenden


#################################################################


# Populismusgrad Violin-Plot
gender_posts$party <- factor(gender_posts$party, levels = desired_order)
p10 <- ggplot(gender_posts, aes(x = party, y = Populismusgrad, fill = party)) +
  geom_violin(drop = FALSE, alpha = 0.4) +
  geom_jitter(aes(colour = party), alpha = 0.8, width = 0.5, ) +
  scale_x_discrete(drop = FALSE) + # Alle Parteien einschließen, auch ohne Daten
  scale_fill_manual(values = parteifarben[levels(gender_posts$party)]) + # Farbe für Violin-Plot einstellen
  scale_colour_manual(values = parteifarben[levels(gender_posts$party)]) + # Farbe für Jitter einstellen
  labs(#title= "Populismusgrad nach Partei",
       x = "Partei",
       y = "Populismusgrad",
       fill = "Partei",
       colour = "Partei") +
  theme_minimal() +
  #scale_x_discrete(labels = function(x) str_wrap(x, width = 13)) # Umbruch der Beschriftung
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill = "none", colour = "none") # Legende ausblenden

# Populismusgrad von Posts Bar-Plot
# Alle Parteien einfügen
p11 <- ggplot(gender_posts, aes(fill = popind, y = party)) +
  geom_bar(position = "fill") +
  scale_fill_manual(
    values = c("#2CA02C", "#1F77B4", "#FF7F0E", "#D62728"),
    labels = c("0" = "0 (kein Populismus)", "1" = "1–2 (gering)", "2" = "3–4 (moderat)", "3" = ">4 (hoch)")) + # Farbe einstellen
  labs(
    x = "Relative Verteilung",
    y = "Partei",
    fill= "Populismusgrad"
  ) +
  theme_minimal()


##################################################


# Populismusgrad Violin-Plot
gender_main_posts$party <- factor(gender_main_posts$party, levels = desired_order)
p12 <- ggplot(gender_main_posts, aes(x = party, y = Populismusgrad, fill = party)) +
  geom_violin(drop = FALSE, alpha = 0.4) +
  geom_jitter(aes(colour = party), alpha = 0.8, width = 0.5, ) +
  scale_x_discrete(drop = FALSE) + # Alle Parteien einschließen, auch ohne Daten
  scale_fill_manual(values = parteifarben[levels(gender_posts$party)]) + # Farbe für Violin-Plot einstellen
  scale_colour_manual(values = parteifarben[levels(gender_posts$party)]) + # Farbe für Jitter einstellen
  labs(#title= "Populismusgrad nach Partei",
       x = "Partei",
       y = "Populismusgrad",
       fill = "Partei",
       colour = "Partei") +
  theme_minimal() +
  #scale_x_discrete(labels = function(x) str_wrap(x, width = 13)) # Umbruch der Beschriftung
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill = "none", colour = "none") # Legende ausblenden

# Populismusgrad von Posts Bar-Plot
p13 <- ggplot(gender_main_posts, aes(fill = popind, y = party)) +
  geom_bar(position = "fill") +
  scale_fill_manual(
    values = c("#2CA02C", "#1F77B4", "#FF7F0E", "#D62728"),
    labels = c("0" = "0 (kein Populismus)", "1" = "1–2 (gering)", "2" = "3–4 (moderat)", "3" = ">4 (hoch)")) + # Farbe einstellen
  labs(
    x = "Relative Verteilung",
    y = "Partei",
    fill= "Populismusgrad"
  ) +
  theme_minimal()


#plot <- (p1 + p2 + p3) / (p4 + p5 + p6) / (p7 + p8 + p9) +
  #plot_annotation(tag_levels = 'A')

```

\blandscape

```{r plots-ausgeben}
#| label: fig-smplots
#| layout-ncol: 3
#| fig-cap: "Facebook-Posts der Bundestagsparteien zwischen 2017 und 2024 – Gesamt, nach Wahlperiode, nach Jahr. Eigene Abbildung. (geS = geschlechtergerechte Sprache)"
#| fig-subcap:
#|   - "Gesamtzahl der Posts"
#|   - "Posts pro Tag nach Wahlperiode"
#|   - "Posts pro Tag nach Jahr"
#|   - "Posts, die geS thematisieren"
#|   - "Posts pro Tag, die geS thematisieren nach Wahlperiode"
#|   - "Posts pro Tag, die geS thematisieren nach Jahr"
#|   - "Posts mit Hauptthema geS"
#|   - "Posts pro Tag mit Hauptthema geS nach Wahlperiode"
#|   - "Posts pro Tag mit Hauptthema geS nach Jahr"
#| out-height: 80%
#| out-width: 80%
#| fig-pos: p
#| echo: false
#| warning: false
#| message: false

p1
p2
p3
p4
p5
p6
p7
p8
p9


```

\elandscape

Bei der Betrachtung der Hypothese 3.2 sowie @fig-popindplots springt sofort ins Auge, dass vor allem und fast ausschließlich die AfD und die CSU populistisch über geschlechtergerechte Sprache sprechen. Aus dem Violin-Plot (@fig-popindplots-1, `Chi² (18, 74) = 27.82, p < 0.1`[^04-analyse-sm-13]) geht hervor, dass die AfD populistischer agiert, was sich sowohl mit Blick auf die Bewertungsstufen (gering, moderat, hoch) zeigt (@fig-popindplots-2, `Chi² (9, 74) = 15.37, p = 0.14`[^04-analyse-sm-14]), als auch in Bezug auf die Posts mit Hauptthema geschlechtergerechter Sprache offensichtlich wird (@fig-popindplots-3, `Chi² (12, 36) = 16.57, p = 0.31`; @fig-popindplots-4, `Chi² (6, 36= = 4.62, p = 0.5`[^04-analyse-sm-15]) – wenn auch für alle drei Grafiken gilt, dass sie ein zu hohes Maß an Überzufälligkeit aufweisen. Hypothese 3.2 kann somit nur in Teilen bekräftigt werden, die Linken fallen wie schon bei H3.1 aus dem theoretischen Raster.

[^04-analyse-sm-13]: Fisher-Test zur Ermittlung der exakten Signifikanz.

[^04-analyse-sm-14]: Fishers-Test zur Ermittlung der exakten Signifikanz.

[^04-analyse-sm-15]: Jeweils: Fishers-Test zur Ermittlung der exakten Signifikanz.

Nicht falsifiziert und auch klar bekräftigt werden kann dagegen Hypothese 3.5: Posts, in denen hauptsächlich geschlechtergerechte Sprache thematisiert wird und nicht nur Randthema ist, sind besonders und häufiger populistisch (@fig-popindplots) – wenn auch hinsichtlich der Signifikanz dieselben Einschränkungen für die Abbildungen (b) bis (d) gelten. Zwar sind nicht mehr AfD-Posts populistisch, allerdings weisen sie mehr Populismusdimensionen auf, wenn geschlechtergerechte Sprache das Hauptthema des Posts ist. Bei der CSU ist dagegen sogar festzustellen, dass beides gilt: Mehr Posts sind populistisch und die Posts weisen mehr Populismusdimensionen auf.

```{r popind-plots}
#| label: fig-popindplots
#| layout-ncol: 2
#| fig-cap: "Populismusgrad der Facebook-Posts zu geschlechtergerechter Sprache (geS) zwischen 2017 und 2024. Eigene Abbildung."
#| fig-subcap: 
#|   - "Posts, die geS thematisieren"
#|   - "Posts, die geS thematisieren nach Stufen"
#|   - "Posts mit Hauptthema geS"
#|   - "Posts mit Hauptthema geS nach Stufen"
#| out-width: 100%

p10
p11
p12
p13

```

## Auswertung

Zusammenfassend lässt sich feststellen, dass Facebook eher ein Medium der rechten und konservativen Parteien zu sein scheint – sie sind deutlich aktiver. H3.1 konnte so widerlegt werden. Auch die anschließende Hypothese 3.2 gilt nur für die AfD. Darüber hinaus tritt aber auch die CSU als besonders populismusfreudig hervor. H3.3 konnte klar bekräftigt werden: Die AfD thematisiert geschlechtergerechte Sprache mit Abstand am häufigsten. Der Verdacht des Polarisierungsunternehmers AfD erhärtet sich damit. Nachfolgende Forschung könnte an diesem Punkt weiter ansetzen. Im Bundestagswahlkampf wurde geschlechtergerechte Sprache besonders häufig verwendet, H3.4 gilt also als bekräftigt. Das gleiche gilt für H3.5.
